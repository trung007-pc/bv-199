@page "/roles"
@attribute [Authorize(Roles = "ADMIN")]
@using ButtonType = Radzen.ButtonType
@inject RoleManagerService _roleManagerService;
@inherits BaseBlazorPage
@using Contract.Identity.RoleManager;
@using Core.Const
@using WebClient.Service.Roles

<h3>Role</h3>


<div style="display: flex;justify-content: space-between;align-items: center">
    <div>
        <RadzenBreadCrumb >
            <RadzenBreadCrumbItem Path="/" Icon="home" Style="font-size: 20px"/>
            <RadzenBreadCrumbItem Text="@HeaderTitle" Style="font-weight: 300"/>
        </RadzenBreadCrumb>
    </div>
    <div>
        <RadzenButton Text="Create" Click="@ShowNewModal" Icon="post_add" Style="margin-bottom: 20px;"/>
    </div>
</div>


<RadzenCard>
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@Roles" TItem="RoleDto" ColumnWidth="300px"
                    AllowColumnPicking="true"
                    FilterMode="FilterMode.Simple"
                    LogicalFilterOperator="LogicalFilterOperator.Or"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    PageSizeOptions="PageSizeOptions"

                    Style="width: 100%">
        <Columns>

            <RadzenDataGridColumn TItem="RoleDto" Property="Name" TextAlign="TextAlign.Center" Title="Name" Frozen="true" Width="160px"/>
            <RadzenDataGridColumn TItem="RoleDto" Property="Code" TextAlign="TextAlign.Center" Title="Code" Frozen="true" Width="160px"/>
            <RadzenDataGridColumn TItem="RoleDto" Property="Name" Title="Action" TextAlign="TextAlign.Center" Frozen="true" Width="160px" Filterable="false">
                <Template Context="data">
                    <RadzenButton Click="async () => { await ShowEditModal(data); }" Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium">
                    </RadzenButton>

                    <RadzenButton Click="async () => { await ShowConfirmMessage(data.Id); }" ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Class="my-1 ms-1">
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>


<Modal @ref="CreateModal">
    <ModalContent Size="ModalSize.Large" Centered="true">
        <ModalHeader>
            <ModalTitle>Role</ModalTitle>
        </ModalHeader>
        <EditForm Model="NewRole" OnValidSubmit="async () => { await CreateRole(); }">
            <ModalBody>

                <DataAnnotationsValidator/>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                <RadzenTextBox Class="w-100" @bind-Value="NewRole.Name"/>
                <ValidationMessage For="@(() => NewRole.Name)"/>

                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Role Code</RadzenText>
                <RadzenTextBox Class="w-100" @bind-Value="NewRole.Code"/>
                <ValidationMessage For="@(() => NewRole.Code)"/>

                <RadzenCheckBoxList @bind-Value=@Claims TValue="string" AllowSelectAll="true" SelectAllText="Select all items" Class="mb-5" Style="outline:none">
                    <Items >
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.READ" Value="@ClaimNameTypes.READ"/>
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.WRITE" Value="@ClaimNameTypes.WRITE"/>
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.CREATE" Value="@ClaimNameTypes.CREATE"/>
                    </Items>
                </RadzenCheckBoxList>
            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideNewModal" Text="Cancel"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>

<Modal @ref="EditModal">
    <ModalContent Size="ModalSize.Large" Centered="true">
        <ModalHeader>
            <ModalTitle>User</ModalTitle>
        </ModalHeader>
        <EditForm Model="EditRole" OnValidSubmit="async () => { await UpdateRole(); }">

            <ModalBody>
                <DataAnnotationsValidator/>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                <RadzenTextBox Class="w-100" @bind-Value="EditRole.Name"/>
                <ValidationMessage For="@(() => EditRole.Name)"/>

                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Role Code</RadzenText>
                <RadzenTextBox Class="w-100" @bind-Value="EditRole.Code"/>
                <ValidationMessage For="@(() => EditRole.Code)"/>
                <RadzenCheckBoxList @bind-Value=@Claims TValue="string" AllowSelectAll="true" SelectAllText="Select all items" Class="mb-5" Style="outline:none">
                    <Items >
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.READ" Value="@ClaimNameTypes.READ"/>
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.WRITE" Value="@ClaimNameTypes.WRITE"/>
                        <RadzenCheckBoxListItem Text="@ClaimNameTypes.CREATE" Value="@ClaimNameTypes.CREATE"/>
                    </Items>
                </RadzenCheckBoxList>
            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideEditModal" Text="Cancel"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>

            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>