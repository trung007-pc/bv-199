@page "/document-file"
@attribute [Authorize(Roles = "ADMIN")]
@using ButtonType = Radzen.ButtonType
@inherits BaseBlazorPage
@using Core.Const
@using Microsoft.AspNetCore.Components
@using WebClient.Service.DocumentFiles
@using Contract.DocumentFiles;
@using Contract.FileFolders
@using WebClient.Service.Departments
@using WebClient.Service.FileFolders
@using WebClient.Service.FileTypes
@using WebClient.Service.IssuingAgencys
@using WebClient.Service.Upload
@using Variant = Radzen.Variant
@using DialogOptions = Radzen.DialogOptions
@using DialogService = Radzen.DialogService
@using Contract.Departments
@using Contract.Identity.UserManager
@using WebClient.Service.SendingFiles
@using WebClient.Service.Users
@inject DocumentFileService _documentFileService;
@inject FileFolderService _fileFolderService;
@inject IssuingAgencyService _issuingAgencyService;
@inject FileTypeService _fileTypeService;
@inject UploadService _uploadService;
@inject IJSRuntime JS
@inject NavigationManager _navigationManager;
@inject DialogService DialogService
@inject DepartmentService _departmentService;
@inject UserManagerService _userManagerService;
@inject SendingFileService _sendingFileService;


<div style="display: flex;justify-content: space-between;align-items: center;margin-bottom: 10px">
    <div>
        <RadzenBreadCrumb >
            <RadzenBreadCrumbItem Path="/" Icon="home" Style="font-size: 20px"/>
            <RadzenBreadCrumbItem Text="@HeaderTitle" Style="font-weight: 300"/>
        </RadzenBreadCrumb>
    </div>
    <div>
        <RadzenButton Text="Create" Click="@ShowNewModal" Icon="post_add"/>
    </div>
</div>

<RadzenCard>
    <Blazorise.Row Style="display:flex;align-items: center">
        <Blazorise.Column ColumnSize="ColumnSize.Is2" Style="display:flex;align-items: center">
            <RadzenIcon Icon="calendar_today" Style="margin-right: 7px;font-size: 28px;color: deeppink"/>
            <DateRangePicker @bind-StartDate="Timeline.StartDay"
                             @bind-EndDate="Timeline.EndDay" Ranges="DateRanges" DateFormat="@DateFormatType.DateFormat" OnClosed="OnChangedDate" class="form-control form-control-md" placeholder="Select Date...">
            </DateRangePicker>
        </Blazorise.Column>

        <Blazorise.Column ColumnSize="ColumnSize.Is2" Style="display:flex;align-items: center">
            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@Filter.IssuingAgencyId Multiple="false"
                            Change="OnChangeSelectedAgency"
                            TextProperty="Name"
                            ValueProperty="Id"
                            Placeholder="Select Agency"
                            Data=@HierarchicalIssuingAgencies
                            Class="w-100"/>
        </Blazorise.Column>

        <Blazorise.Column ColumnSize="ColumnSize.Is2" Style="display:flex;align-items: center">

            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@Filter.FileTypeId Multiple="false"
                            TextProperty="Name"
                            Change="OnChangeSelectedType"
                            ValueProperty="Id"
                            Placeholder="Select Type"
                            Data=@FileTypes
                            Class="w-100"/>
        </Blazorise.Column>


        <Blazorise.Column ColumnSize="ColumnSize.Is6" Style="display:flex;align-items: center">

            <div class="search-input">
                <RadzenTextBox Trim="true" Placeholder="Search..." @onkeyup="async (ars) => await OnEnterKeyPressed(ars)" @bind-Value="Filter.Text" class="w-100" Style="border: none;outline: none"/>
            </div>
            <RadzenButton Click="@GetDocumentFiles" Icon="search" Style="border-radius: 0"/>

        </Blazorise.Column>

    </Blazorise.Row>
</RadzenCard>

<RadzenCard>


    <Blazorise.Row>
        <Blazorise.Column ColumnSize="ColumnSize.Is2">
            <RadzenTree Data=@FolderTree Change="async (e) => { await OnChangeSelectedFolder(e); }" Style="width:100%">
                <RadzenTreeLevel TextProperty="Name" ChildrenProperty="ChildFolders"
                                 HasChildren=@(e => (e as FileFolderDto).ChildFolders.Any())
                                 Expanded="@(value => true)">
                    <Template >
                        <div style="display: flex;width:100%;justify-content: space-between;align-items: center">
                            <div style="display: flex">
                                <RadzenIcon Icon="folder"/>
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="margin-bottom: 0">@context.Text</RadzenText>
                            </div>
                        </div>

                    </Template>
                </RadzenTreeLevel>
            </RadzenTree>

        </Blazorise.Column>

        <Blazorise.Column ColumnSize="ColumnSize.Is10">

            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingBlazorise.Rows="false" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                            Data="@DocumentFileWithNavProperties" TItem="DocumentFileWithNavPropertiesDto" ColumnWidth="300px"
                            AllowColumnPicking="true"
                            PageSizeOptions="PageSizeOptions"
                            IsLoading="IsLoading"
                            Style="width: 100%">
                <Columns>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.Name" TextAlign="TextAlign.Center" Title="Name" Width="160px"/>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.Code" TextAlign="TextAlign.Center" Title="Code" Width="160px"/>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.StorageCode" TextAlign="TextAlign.Center" Title="Storage Code" Width="160px"/>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="IssuingAgency.Name" TextAlign="TextAlign.Center" Title="Agency" Width="160px"/>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="FileType.Name" TextAlign="TextAlign.Center" Title="Type" Width="160px"/>

                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.PublicationDate" TextAlign="TextAlign.Center" Title="Publication Date" Width="160px">
                        <Template Context="data">
                            @($"{data.File.PublicationDate:dd/MM/yyyy}")
                        </Template>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.CreationDate" TextAlign="TextAlign.Center" Title="Received Date" Width="160px">
                        <Template Context="data">
                            @($"{data.File.CreationDate:dd/MM/yyyy}")
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="DocumentFileWithNavPropertiesDto" Property="File.Name" Title="Action" TextAlign="TextAlign.Center" Filterable="false">
                        <Template Context="data">

                            <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="send" Click="async () => { await ShowSendingFile(data.File); }" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Class="my-1 ms-1">
                            </RadzenButton>
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="remove_red_eye" Click="() => { GotoViewDocumentFile(data.File.Id); }" Variant="Variant.Flat" Shade="Shade.Default" Size="ButtonSize.Medium" Class="my-1 ms-1">
                            </RadzenButton>

                            <RadzenButton Icon="edit" Click="async () => { await ShowEditingModal(data.File); }" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium">
                            </RadzenButton>
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Click="async () => { await ShowConfirmMessage(data.File.Id); }" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Class="my-1 ms-1">
                            </RadzenButton>
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </Blazorise.Column>
    </Blazorise.Row>


</RadzenCard>


<Modal @ref="CreateModal">
    <ModalContent Size="ModalSize.Large" Centered="true">
        <ModalHeader>
            <ModalTitle>DocumentFile</ModalTitle>
        </ModalHeader>
        <EditForm Model="NewDocumentFile" OnValidSubmit="async () => { await CreateDocumentFile(); }">
            <ModalBody>
                <Blazorise.Row>
                    <DataAnnotationsValidator/>

                    <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                        <RadzenTextBox Class="w-100" @bind-Value="NewDocumentFile.Name"/>
                        <ValidationMessage For="@(() => NewDocumentFile.Name)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Code</RadzenText>
                        <RadzenTextBox Class="w-100" @bind-Value="NewDocumentFile.Code"/>
                        <ValidationMessage For="@(() => NewDocumentFile.Code)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">File Types</RadzenText>
                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@NewDocumentFile.DocumentTypeId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@FileTypes
                                        Class="w-100"/>
                        <ValidationMessage For="@(() => NewDocumentFile.DocumentTypeId)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Issuing Agencies</RadzenText>

                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@NewDocumentFile.IssuingAgencyId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@HierarchicalIssuingAgencies
                                        Class="w-100"/>
                        <ValidationMessage For="@(() => NewDocumentFile.IssuingAgencyId)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Folders</RadzenText>

                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@NewDocumentFile.DocumentFolderId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@HierarchicalFileFolders
                                        Name="@nameof(NewDocumentFile.DocumentFolderId)"
                                        Class="w-100"/>

                        <ValidationMessage For="@(() => NewDocumentFile.DocumentFolderId)"/>


                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Upload File</RadzenText>

                        <RZInputFile Icon="upload_file"
                                     Accept=".pdf,.xlsx,.doc,.docx"
                                     Style="display: flex;align-items: center;min-width:123px;max-width: 205px;margin: 0;cursor: pointer;background-color: #dc3545"
                                     Text="Upload File" Event="async (e) => { await OnChangeFileAtNewModal(e); }">
                        </RZInputFile>


                    </Blazorise.Column>

                    <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">

                        <RadzenRow Gap="5px">
                            <RadzenColumn Size="6">
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Publication Date</RadzenText>
                                <RadzenDatePicker @bind-Value=@NewDocumentFile.PublicationDate DateFormat="dd/MM/yyyy" Class="w-100"/>
                                <ValidationMessage For="@(() => NewDocumentFile.PublicationDate)"/>
                            </RadzenColumn>
                            <RadzenColumn Size="6">

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Received Date</RadzenText>
                                <RadzenDatePicker Class="w-100" DateFormat="dd/MM/yyyy" @bind-Value="NewDocumentFile.CreationDate"/>
                                <ValidationMessage For="@(() => NewDocumentFile.CreationDate)"/>
                            </RadzenColumn>
                        </RadzenRow>


                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Allow Download And Print</RadzenText>
                        <RadzenSwitch @bind-Value="NewDocumentFile.AllowDownloadAndPrint"/>
                        <ValidationMessage For="@(() => NewDocumentFile.AllowDownloadAndPrint)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Note</RadzenText>
                        <RadzenTextArea Class="w-100" Placeholder="Nhập vào đây..." @bind-Value="NewDocumentFile.Note" Rows="8" Cols="30"/>
                        <ValidationMessage For="@(() => NewDocumentFile.Note)"/>
                    </Blazorise.Column>
                    <Blazorise.Column ColumnSize="ColumnSize.Is12.OnDesktop">

                    </Blazorise.Column>
                </Blazorise.Row>


            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideNewModal" Text="Cancel"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>

<Modal @ref="EditingModal">
    <ModalContent Size="ModalSize.Large" Centered="true">
        <ModalHeader>
            <ModalTitle>Document File</ModalTitle>
        </ModalHeader>
        <EditForm Model="EditingDocumentFile" OnValidSubmit="async () => { await UpdateDocumentFile(); }">
            <ModalBody>
                <DataAnnotationsValidator/>
                <Blazorise.Row>
                    <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                        <RadzenTextBox Class="w-100" @bind-Value="EditingDocumentFile.Name"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.Name)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Code</RadzenText>
                        <RadzenTextBox Class="w-100" @bind-Value="EditingDocumentFile.Code"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.Code)"/>


                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">File Types</RadzenText>
                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@EditingDocumentFile.DocumentTypeId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@FileTypes
                                        Class="w-100"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.DocumentFolderId)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Issuing Agencies</RadzenText>

                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@EditingDocumentFile.IssuingAgencyId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@HierarchicalIssuingAgencies
                                        Class="w-100"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.IssuingAgencyId)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Folders</RadzenText>

                        <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value=@EditingDocumentFile.DocumentFolderId Multiple="false"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Placeholder="Select..."
                                        Data=@HierarchicalFileFolders
                                        Class="w-100"/>

                        <ValidationMessage For="@(() => EditingDocumentFile.DocumentFolderId)"/>

                        <RZBR></RZBR>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Upload File</RadzenText>

                        <div style="display: flex;justify-content: space-between">
                            <RZInputFile Icon="upload_file"
                                         Accept=".pdf,.xlsx,.doc,.docx"

                                         Style="display: flex;align-items: center;min-width:123px;max-width: 205px;margin: 0;cursor: pointer;background-color: #dc3545"
                                         Text="Upload File" Event="async (e) => { await OnChangeFileAtEditingModal(e); }">
                            </RZInputFile>

                        </div>

                    </Blazorise.Column>

                    <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">

                        <RadzenRow Gap="5px">
                            <RadzenColumn Size="6">
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Publication Date</RadzenText>
                                <RadzenDatePicker @bind-Value=@EditingDocumentFile.PublicationDate DateFormat="dd/MM/yyyy" Class="w-100"/>
                                <ValidationMessage For="@(() => EditingDocumentFile.PublicationDate)"/>
                            </RadzenColumn>
                            <RadzenColumn Size="6">
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Received Date</RadzenText>
                                <RadzenDatePicker Class="w-100" DateFormat="dd/MM/yyyy" @bind-Value="EditingDocumentFile.CreationDate"/>
                                <ValidationMessage For="@(() => EditingDocumentFile.CreationDate)"/>
                            </RadzenColumn>
                        </RadzenRow>


                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Allow Download And Print</RadzenText>
                        <RadzenSwitch @bind-Value="EditingDocumentFile.AllowDownloadAndPrint"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.AllowDownloadAndPrint)"/>

                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Note</RadzenText>
                        <RadzenTextArea Class="w-100" Placeholder="Nhập vào đây..." @bind-Value="EditingDocumentFile.Note" Rows="8" Cols="30"/>
                        <ValidationMessage For="@(() => EditingDocumentFile.Note)"/>

                        @if (EditingDocumentFile.Extentions == ".xlsx"
                             || EditingDocumentFile.Extentions == ".doc")
                        {
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Download File</RadzenText>

                            <RadzenButton Text="Download File" Click="async () => { await DownloadFile(EditingDocumentFile.URL, EditingDocumentFileId); }" Icon="download"/>
                        }


                    </Blazorise.Column>

                    <RZBR></RZBR>
                    <Blazorise.Column ColumnSize="ColumnSize.Is12.OnDesktop">

                    </Blazorise.Column>
                </Blazorise.Row>


            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideEditingModal" Text="Cancel"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>


@* Sending - FIle *@
<RZModel @ref="@SendingFileModel" Width="70vw" Title="Send File" ShowTitle="true">
    <RadzenAlert AlertStyle="AlertStyle.Success" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
        Number:@DocumentFileDto.Code|Name:@DocumentFileDto.Name|Storage Number :@DocumentFileDto.StorageCode
    </RadzenAlert>
    <RadzenRow Gap="10">
        <RadzenColumn Size="5">
            <RadzenText>Send By Department</RadzenText>
            <RadzenTree Data=@HierarchicalDepartments Style="width:100%"
                        AllowCheckBoxes="true"
                        @bind-CheckedValues="SelectedDepartments">
                <RadzenTreeLevel TextProperty="Name" ChildrenProperty="ChildDepartment"
                                 Expanded="@(value => true)"
                                 HasChildren=@(e => (e as DepartmentDto).ChildDepartment.Any())>
                    <Template Context="data">
                        <div style="display: flex;width:100%;justify-content: space-between;align-items: center">
                            <div style="display: flex">
                                <RadzenIcon Icon="home_work"/>
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="margin-bottom: 0">@data.Text</RadzenText>
                            </div>
                        </div>

                    </Template>
                </RadzenTreeLevel>
            </RadzenTree>
        </RadzenColumn>
        <RadzenColumn Size="5">
            <RadzenText>Send By Identity</RadzenText>
            <RadzenDropDownDataGrid Multiple="true"
                                    Style="width: 70%"
                                    AllowClear="true" AllowFiltering="true"
                                    Chips="true"
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    TextProperty="FullName"
                                    ValueProperty="Id"
                                    @bind-Value="SelectedUserIds"
                                    Data=@Users>

                <Columns>
                    <RadzenDropDownDataGridColumn Width="60px" Sortable="false">
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(SelectedUserIds != null && SelectedUserIds.Any(x => x == ((UserDto) data).Id))"
                                            TValue="bool"/>
                        </Template>
                    </RadzenDropDownDataGridColumn>
                    <RadzenDropDownDataGridColumn Property="FullName" Title="Full Name" Width="200px"/>
                    <RadzenDropDownDataGridColumn Property="PhoneNumber" Title="Phone Number" Width="200px"/>
                    <RadzenDropDownDataGridColumn Property="EmployeeCode" Title="Employee Code" Width="200px"/>
                </Columns>


            </RadzenDropDownDataGrid>

        </RadzenColumn>
    </RadzenRow>


    <div class="Row" style="float: right">
        <div class="col">
            <RadzenButton Text="Ok" Click="async () => { await CreateSendingFiles(DocumentFileDto.Id); }" Class="me-1" Style="width: 80px;"/>
            <RadzenButton Text="Cancel" Click="() => SendingFileModel.HideModel()" ButtonStyle="ButtonStyle.Light" Class="me-1"/>
        </div>
    </div>
</RZModel>