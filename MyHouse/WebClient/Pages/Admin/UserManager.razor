@page "/users"
@attribute [Authorize(Roles = "ADMIN")]
@using ButtonType = Radzen.ButtonType
@inject UserManagerService _userManagerService;
@inherits BaseBlazorPage
@inject RoleManagerService _roleManagerService;
@inject PositionService _positionService;
@inject DepartmentService _departmentService;

@inject UploadService _uploadService;
@inject IWebHostEnvironment _webHostEnvironment;
@inject DownloadFileService _downloadFile;
@using Contract.Identity.UserManager;
@using Core.Enum
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Hosting
@using WebClient.Service.JS
@using WebClient.Service.Roles
@using WebClient.Service.Upload
@using WebClient.Service.Users
@using Contract.Common.Excels;
@using Contract.Departments
@using WebClient.Service.Departments
@using WebClient.Service.Positions
@using Variant = Radzen.Variant
@using Color = Blazorise.Color

<h3>@HeaderTitle</h3>

<div style="display: flex;justify-content: space-between;align-items: center">
    <div>
        <RadzenBreadCrumb >
            <RadzenBreadCrumbItem Path="/" Icon="home" Style="font-size: 20px"/>
            <RadzenBreadCrumbItem Text="@HeaderTitle" Style="font-weight: 300"/>
        </RadzenBreadCrumb>
    </div>

    <div style="display: flex;gap: 5px">
        <RadzenButton Text="Import Excel File" ButtonStyle="ButtonStyle.Success" Icon="upload" Click="@ShowImportExcelFileModal"/>
        <RadzenButton Text="Create" Icon="person_add" Click="@ShowNewModal"/>
    </div>

</div>

<RZBR/>
<RZBR/>


<RadzenCard>
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingBlazorise.Rows="false" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@Users" TItem="UserWithNavigationPropertiesDto" ColumnWidth="300px"
                    AllowSorting="true"
                    FilterMode="FilterMode.Simple"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    LogicalFilterOperator="LogicalFilterOperator.Or"
                    IsLoading="IsLoading"
                    Filter="ShowLoading"
                    Sort="ShowLoading"
                    AllowColumnPicking="true"
                    PickedColumnsChanged="PickedColumnsChanged"
                    PageSizeOptions="PageSizeOptions"
                    Style="width: 100%">
        <Columns>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.UserName" TextAlign="TextAlign.Center" Title="User Name" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.EmployeeCode" TextAlign="TextAlign.Center" Title="Employee Code" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.FirstName" TextAlign="TextAlign.Center" Title="First Name" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.LastName" TextAlign="TextAlign.Center" Title="Last Name" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.Gender" TextAlign="TextAlign.Center" Title="Gender" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.DOB" FormatString="{0:d}" TextAlign="TextAlign.Center" Title="DOB" Width="160px">
                <Template Context="data">
                    @($"{data.User.DOB:dd/MM/yyyy}")
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.PhoneNumber" TextAlign="TextAlign.Center" Title="Phone Number" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.Email" TextAlign="TextAlign.Center" Title="Email" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="User.IsActive" FormatString="{0:d}" TextAlign="TextAlign.Center" Title="Is Active" Width="160px">
            <Template Context="data">
                <RadzenSwitch @bind-Value=@data.User.IsActive Disabled="true"/>
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="Position.Name" TextAlign="TextAlign.Center" Title="Position" Width="160px"/>
            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Property="Position.Name" TextAlign="TextAlign.Center" Title="Department" >

                <Template Context="data">
                    @{ int i = 0; }
                    @foreach (var item in data.Departments)
                    {
                        <RadzenBadge BadgeStyle="ChooseColorByNumber(i)" IsPill="@true" Text="@item.Name" Class="ml-2"/>
                        i++;
                    }
                </Template>
            </RadzenDataGridColumn>


            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Resizable="true" Property="RoleNames"   Sortable="false" Filterable="false" Title="Roles">
                <Template Context="data">
                    @{ int i = 0; }
                    @foreach (var item in data.RoleNames)
                    {
                        <RadzenBadge BadgeStyle="ChooseColorByNumber(i)" IsPill="@true" Text="@item" Class="ml-2"/>
                        i++;
                    }

                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="UserWithNavigationPropertiesDto" Filterable="false" Property="User.UserName" TextAlign="TextAlign.Center" Frozen="true" Title="Action" Width="160px">
                <Template Context="data">
                    <RadzenButton Click="() => { ShowEditingModal(data); }" Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium">
                    </RadzenButton>
                    <RadzenButton Click="async () => { await ShowConfirmMessage(data.User.Id); }" ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" Class="my-1 ms-1">
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>

</RadzenCard>

<Modal @ref="CreateModal">
    <ModalContent Size="ModalSize.Large" Centered="true" Scrollable="false">
        <ModalHeader>
            <ModalTitle>User</ModalTitle>
        </ModalHeader>
        <EditForm Model="NewUser" OnValidSubmit="async () => { await CreateUser(); }">
            <ModalBody Style="overflow: auto;padding: 20px">
                <RadzenTabs RenderMode="TabRenderMode.Client">
                    <Tabs>
                        <RadzenTabsItem Text="User">
                            <DataAnnotationsValidator/>
                            <Blazorise.Row>
                                <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3"> First Name </RadzenText>
                                    <RadzenTextBox Class="w-100" @bind-Value="NewUser.FirstName"/>
                                    <ValidationMessage For="@(() => NewUser.FirstName)"/>

                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3"> Last Name </RadzenText>
                                    <RadzenTextBox Class="w-100" @bind-Value="NewUser.LastName"/>
                                    <ValidationMessage For="@(() => NewUser.LastName)"/>

                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Employee Code </RadzenText>
                                    <RadzenTextBox Class="w-100" @bind-Value="NewUser.EmployeeCode"/>
                                    <ValidationMessage For="@(() => NewUser.EmployeeCode)"/>

                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Phone Number </RadzenText>
                                    <RadzenTextBox Class="w-100" @bind-Value="NewUser.PhoneNumber"/>
                                    <ValidationMessage For="@(() => NewUser.PhoneNumber)"/>

                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Password</RadzenText>
                                    <RadzenPassword Class="w-100" @bind-Value="NewUser.Password"/>
                                    <ValidationMessage For="@(() => NewUser.Password)"/>
                                    
                                    <RZBR></RZBR>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="display: inline">Is Active</RadzenText>
                                    <RadzenSwitch @bind-Value=@NewUser.IsActive />
                                    <ValidationMessage For="@(() => NewUser.IsActive)"/>


                                </Blazorise.Column>
                                <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Enter again Password </RadzenText>
                                    <RadzenPassword Class="w-100" @bind-Value="NewUser.PasswordConfirm"/>
                                    <ValidationMessage For="@(() => NewUser.PasswordConfirm)"/>


                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Email</RadzenText>
                                    <RadzenTextBox Class="w-100" @bind-Value="NewUser.Email"/>
                                    <ValidationMessage For="@(() => NewUser.Email)"/>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Date Of Birth</RadzenText>
                                    <RadzenDatePicker @bind-Value=@NewUser.DOB DateFormat="dd/MM/yyyy" Class="w-100"/>
                                    <ValidationMessage For="@(() => NewUser.DOB)"/>
                                    
                             
                                    
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Gender</RadzenText>
                                    <RadzenRadioButtonList @bind-Value="NewUser.Gender" Style="display:flex;margin-bottom: 10px">
                                        <Items>
                                            @foreach (var item in (Gender[]) Enum.GetValues(typeof(Gender)))
                                            {
                                                <RadzenRadioButtonListItem Text="@(item.GetDisplayDescription())" Value="item"/>
                                            }
                                        </Items>
                                    </RadzenRadioButtonList>


                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Roles</RadzenText>
                                    <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    @bind-Value=@SelectedRoles Multiple="true" Placeholder="Select..." Data=@RoleNames
                                                    Change="OnCreateSelectedRoles" Class="w-100"/>


                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Positions</RadzenText>
                                    <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    @bind-Value=@SelectedPositionId Multiple="false"
                                                    TextProperty="Name"
                                                    ValueProperty="Id"
                                                    Placeholder="Select..."
                                                    Data=@Positions
                                                    Class="w-100"/>


                                </Blazorise.Column>
                            </Blazorise.Row>


                        </RadzenTabsItem>
                        <RadzenTabsItem Text="Department">

                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Departments</RadzenText>
                            <RadzenTree Data=@HierarchicalDepartments Style="width:100%"
                                        AllowCheckBoxes="true"
                                        @bind-CheckedValues="SelectedDepartments">
                                <RadzenTreeLevel TextProperty="Name" ChildrenProperty="ChildDepartment"
                                                 Expanded="@(value => true)"
                                                 HasChildren=@(e => (e as DepartmentDto).ChildDepartment.Any())>
                                    <Template Context="data">
                                        <div style="display: flex;width:100%;justify-content: space-between;align-items: center">
                                            <div style="display: flex">
                                                <img src="https://upload.wikimedia.org/wikipedia/commons/4/44/BMW.svg" style="width: 20px; margin-right: 8px;"/>
                                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="margin-bottom: 0">@data.Text</RadzenText>
                                            </div>

                                        </div>

                                    </Template>
                                </RadzenTreeLevel>
                            </RadzenTree>
                        </RadzenTabsItem>
                    </Tabs>

                </RadzenTabs>


            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideNewModal" Text="Cancel"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>

<Modal @ref="EditingModal">
    <ModalContent Size="ModalSize.Large" Centered="true">
        <ModalHeader>
            <ModalTitle>User</ModalTitle>
        </ModalHeader>
        <EditForm Model="EditingUser" OnValidSubmit="async () => { await UpdateUser(); }">
         <ModalBody Style="padding: 20px">
            <RadzenTabs RenderMode="TabRenderMode.Client">
                <Tabs>
                    <RadzenTabsItem Text="User">
                        <DataAnnotationsValidator/>
                        <Blazorise.Row>
                            <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3"> First Name </RadzenText>
                                <RadzenTextBox Class="w-100" @bind-Value="EditingUser.FirstName"/>
                                <ValidationMessage For="@(() => EditingUser.FirstName)"/>

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3"> Last Name </RadzenText>
                                <RadzenTextBox Class="w-100" @bind-Value="EditingUser.LastName"/>
                                <ValidationMessage For="@(() => EditingUser.LastName)"/>

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Employee Code </RadzenText>
                                <RadzenTextBox Class="w-100" @bind-Value="EditingUser.EmployeeCode"/>
                                <ValidationMessage For="@(() => EditingUser.EmployeeCode)"/>


                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Phone Number </RadzenText>
                                <RadzenTextBox Class="w-100" @bind-Value="EditingUser.PhoneNumber"/>
                                <ValidationMessage For="@(() => EditingUser.PhoneNumber)"/>
                                
                                <RZBR></RZBR>
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="display: inline">Is Active</RadzenText>
                                <RadzenSwitch @bind-Value=@EditingUser.IsActive />
                                <ValidationMessage For="@(() => EditingUser.IsActive)"/>
                            </Blazorise.Column>

                            <Blazorise.Column ColumnSize="ColumnSize.Is6.OnDesktop">


                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Email</RadzenText>
                                <RadzenTextBox Class="w-100" @bind-Value="EditingUser.Email"/>
                                <ValidationMessage For="@(() => EditingUser.Email)"/>
                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Date Of Birth</RadzenText>
                                <RadzenDatePicker @bind-Value=@EditingUser.DOB DateFormat="dd/MM/yyyy" Class="w-100"/>
                                <ValidationMessage For="@(() => EditingUser.DOB)"/>

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Gender</RadzenText>
                                <RadzenRadioButtonList @bind-Value="EditingUser.Gender" Style="display:flex;margin-bottom: 10px">
                                    <Items>
                                        @foreach (var item in (Gender[]) Enum.GetValues(typeof(Gender)))
                                        {
                                            <RadzenRadioButtonListItem Text="@(item.GetDisplayDescription())" Value="item"/>
                                        }
                                    </Items>
                                </RadzenRadioButtonList>


                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Roles</RadzenText>
                                <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                @bind-Value=@SelectedRoles Multiple="true" Placeholder="Select..." Data=@RoleNames
                                                Change="OnEditSelectedRoles" Class="w-100"/>

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Positions</RadzenText>
                                <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                @bind-Value=@SelectedPositionId
                                                TextProperty="Name"
                                                ValueProperty="Id"
                                                Multiple="false" Placeholder="Select..." Data=@Positions
                                                Class="w-100"/>

                                <RZBR></RZBR>

                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="display: inline">Set New Password</RadzenText>
                                <RadzenSwitch @bind-Value=@EditingUser.IsSetPassword/>

                                @if (EditingUser.IsSetPassword)
                                {
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="margin-top: 25px">Password</RadzenText>
                                    <RadzenPassword Class="w-100" @bind-Value="EditingUser.Password"/>
                                    <ValidationMessage For="@(() => EditingUser.Password)"/>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Enter again Password </RadzenText>
                                    <RadzenPassword Class="w-100" @bind-Value="EditingUser.PasswordConfirm"/>
                                    <ValidationMessage For="@(() => EditingUser.PasswordConfirm)"/>
                                }
                            </Blazorise.Column>
                        </Blazorise.Row>

                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Departments">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Departments</RadzenText>
                        <RadzenTree Data=@HierarchicalDepartments AllowCheckBoxes="true"  
                                    @bind-CheckedValues="SelectedDepartments" 
                                    
                                    Style="width:100%">
                                <RadzenTreeLevel TextProperty="Name" ChildrenProperty="ChildDepartment"
                                                 Expanded="@(value => true)"
                                                 HasChildren=@(e => (e as DepartmentDto).ChildDepartment.Any())>
                                    <Template Context="data">
                                        <div style="display: flex;width:100%;justify-content: space-between;align-items: center">
                                            <div style="display: flex">
                                                <img src="https://upload.wikimedia.org/wikipedia/commons/4/44/BMW.svg" style="width: 20px; margin-right: 8px;"/>
                                                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="margin-bottom: 0">@data.Text</RadzenText>
                                            </div>
                                        </div>

                                    </Template>
                                </RadzenTreeLevel>
                            </RadzenTree>
                     
                    </RadzenTabsItem>
                </Tabs>

            </RadzenTabs>
            
            </ModalBody>
            <ModalFooter>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Icon="cancel" Click="@HideEditingModal"/>
                <RadzenButton Text="Save Changes" Icon="save" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>


<Modal @ref="ImportFileModal">
    <ModalContent Size="ModalSize.ExtraLarge" Centered="true">
        <ModalHeader>
            <ModalTitle>Import Excel File</ModalTitle>
        </ModalHeader>
        <EditForm Model="UserExcel" OnValidSubmit="async () => { await ImportUserDataOfExcel(); }">

            <ModalBody>
                <div style="display: flex;justify-content: left;gap: 5px">
                    <RadzenButton Text="Dowload An Instruction File" Icon="file_download" Click="@DownloadInstructionFileOfCreatingUser"/>

                    <RadzenButton Text="Dowload A Sample File" Icon="file_download" Click="@DownloadExcelSampleFileOfUser"/>
                    <RZInputFile Icon="upload_file"
                                 Accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"
                                 Style="display: flex;align-items: center;min-width:123px;max-width: 205px;margin: 0;cursor: pointer;background-color: #198754"
                                 Text="Choose An Excel File" Event="async (e) => { await OnChangeFile(e); }">
                    </RZInputFile>
                </div>


                @if (TriggeredWithoutFile)
                {
                    <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
                        You have not imported any a file at all
                    </RadzenAlert>
                }


                @if (!UserValidatorExcel.IsSuccessful)
                {
                    if (UserValidatorExcel.InvalidCells.Count > 0)
                    {
                        <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
                            Invalid Format
                        </RadzenAlert>
                        <RadzenDataGrid AllowColumnResize="true" AllowAlternatingBlazorise.Rows="false" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                        Data="@UserValidatorExcel.InvalidCells" TItem="Cell" ColumnWidth="300px"
                                        Style="width: 100%">
                            <Columns>
                                <RadzenDataGridColumn TItem="Cell" Property="Row" TextAlign="TextAlign.Center" Title="Row" Frozen="true" Width="160px"/>
                                <RadzenDataGridColumn TItem="Cell" Property="Col" TextAlign="TextAlign.Center" Title="Column" Frozen="true" Width="160px"/>


                            </Columns>
                        </RadzenDataGrid>
                    }
                    if (UserValidatorExcel.InvalidLogics.Count > 0)
                    {
                        <RadzenAlert AlertStyle="AlertStyle.Warning" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
                            Invalid Logics :
                            <ul>
                                @foreach (var item in UserValidatorExcel.InvalidLogics)
                                {
                                    <li>@item</li>
                                }
                            </ul>
                        </RadzenAlert>
                    }
                }







            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideImportExcelFileModal">Close</Button>
                <RadzenButton Text="Save Changes" ButtonType="ButtonType.Submit"/>
            </ModalFooter>
        </EditForm>
    </ModalContent>
</Modal>



